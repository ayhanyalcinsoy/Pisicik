fix issue #562
https://github.com/pisilinux/PisiLinux/issues/562

--- bin/mudur.py.orig	2015-05-11 20:46:23.509195049 +0200
+++ bin/mudur.py	2015-05-11 22:26:06.000000000 +0200
@@ -1406,7 +1406,7 @@
         UI.info(_("Creating tmpfiles"))
         if not os.path.isdir("/run/tmpfiles.d"): create_directory("/run/tmpfiles.d")
         run("/usr/bin/kmod", "static-nodes", "--format=tmpfiles", "--output=/run/tmpfiles.d/kmod.conf")
-        out = [line for line in capture("/sbin/mudur_tmpfiles.py")[0].split("\n") if line.strip()]
+        out = [line for line in capture("/sbin/mudur_tmpfiles.py", "--boot")[0].split("\n") if line.strip()]
         if out: LOGGER.log("Errors during tmpfiles creation.\n\t%s" % "\n\t".join(out))
         run("mount", "-t", "tmpfs", "tmpfs", "/dev/shm")
 
--- bin/mudur_tmpfiles.py.orig	2015-05-11 20:46:23.519200049 +0200
+++ bin/mudur_tmpfiles.py	2015-05-11 20:40:04.000000000 +0200
@@ -80,6 +80,7 @@
 
 if __name__ == "__main__":
     if ("-h" or "--help") in sys.argv: usage()
+    boot = True if "--boot" in sys.argv else False
 
     config_files = {}
     errors = []
@@ -90,7 +91,7 @@
         except KeyError:
             config_files[head] = [tail]
 
-    if sys.argv[1:]:
+    if sys.argv[1:] and not boot:
         for arg in sys.argv[1:]:
             (head, tail) = os.path.split(arg)
             if not tail.endswith(".conf"): errors.append("%s is not .conf file" % tail)
@@ -130,6 +131,9 @@
                     if i == "-": fields[n] = ""
                 if not fields[3]: fields[3] = "root"
                 if not fields[4]: fields[4] = "root"
+                if fields[0].endswith("!"):
+                    if not boot: continue
+                    else: fields[0] = fields[0].replace("!", "")
                 if not fields[0] in ["c", "d", "D", "f", "F", "L", "w"]: errors.append("%s - wrong type in file: %s" % (fields[0], os.path.join(d, f)))
                 elif fields[0] == "L":
                     if not fields[6]: errors.append("No arg for type 'L' specified in file: %s" % os.path.join(d, f))
