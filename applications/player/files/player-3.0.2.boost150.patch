diff -up ./player-3.0.2/client_libs/libplayerc++/CMakeLists.txt.boost150 ./player-3.0.2/client_libs/libplayerc++/CMakeLists.txt
--- ./player-3.0.2/client_libs/libplayerc++/CMakeLists.txt.boost150	2009-08-03 23:48:04.000000000 -0400
+++ ./player-3.0.2/client_libs/libplayerc++/CMakeLists.txt	2012-08-12 18:42:46.656436126 -0400
@@ -24,7 +24,7 @@ IF (BUILD_PLAYERCC)
     # Look for Boost libraries
     IF (BUILD_PLAYERCC_BOOST)
         # There is a new, much better, FindBoost.cmake in 2.6
-        IF (CMAKE_MAJOR_VERSION EQUAL 2 AND CMAKE_MINOR_VERSION EQUAL 6)
+        IF (CMAKE_MAJOR_VERSION EQUAL 2 AND CMAKE_MINOR_VERSION GREATER 5)
             OPTION (Boost_USE_STATIC_LIBS "Use the static versions of the Boost libraries" OFF)
             MARK_AS_ADVANCED (Boost_USE_STATIC_LIBS)
             OPTION (USE_BOOST_THREAD "Use the Boost threading library" ON)
@@ -33,7 +33,7 @@ IF (BUILD_PLAYERCC)
             MARK_AS_ADVANCED (USE_BOOST_SIGNALS)
 
             IF (USE_BOOST_THREAD)
-                SET (BOOST_COMPONENTS thread)
+                SET (BOOST_COMPONENTS thread system)
             ELSE (USE_BOOST_THREAD)
                 SET (HAVE_BOOST_THREAD FALSE CACHE INTERNAL "Is the Boost::Thread library present")
             ENDIF (USE_BOOST_THREAD)
@@ -61,6 +61,21 @@ IF (BUILD_PLAYERCC)
                             "Boost::Thread library not found, support will not be included.")
                 ENDIF (Boost_THREAD_FOUND)
 
+                IF (Boost_SYSTEM_FOUND)
+                    GET_FILENAME_COMPONENT (boostSystemLib ${Boost_SYSTEM_LIBRARY} NAME_WE CACHE)
+                    # Chop off the lib at the front, too, if present
+                    STRING (REGEX REPLACE "^lib" "" boostSystemLib ${boostSystemLib})
+                    PLAYERCC_ADD_LINK_LIB (${boostSystemLib})
+                    SET (boostIncludeDir ${Boost_INCLUDE_DIR})
+                    SET (HAVE_BOOST_SYSTEM TRUE CACHE INTERNAL "Is the Boost::System library present")
+                    MESSAGE (STATUS
+                            "PlayerC++ client library will be built with Boost::System support.")
+                ELSE (Boost_SYSTEM_FOUND)
+                    MESSAGE (STATUS
+                            "Boost::System library not found, support will not be included.")
+                ENDIF (Boost_SYSTEM_FOUND)
+
+
                 IF (Boost_SIGNALS_FOUND)
                     GET_FILENAME_COMPONENT (boostSignalsLib ${Boost_SIGNALS_LIBRARY} NAME_WE CACHE)
                     STRING (REGEX REPLACE "^lib" "" boostSignalsLib ${boostSignalsLib})
@@ -78,7 +93,7 @@ IF (BUILD_PLAYERCC)
                          "Boost libraries were not found. Boost::Signals and Boost::Thread support
                          will not be included in PlayerC++.")
             ENDIF (Boost_FOUND)
-        ELSE (CMAKE_MAJOR_VERSION EQUAL 2 AND CMAKE_MINOR_VERSION EQUAL 6)
+        ELSE (CMAKE_MAJOR_VERSION EQUAL 2 AND CMAKE_MINOR_VERSION GREATER 5)
             FIND_PACKAGE (Boost)
             IF (Boost_FOUND)
                 # For 2.4, assume that if boost is found then both signals and threads are present
@@ -146,7 +161,7 @@ IF (BUILD_PLAYERCC)
                          "Boost libraries were not found. Boost::Signals and Boost::Thread support
                          will not be included in PlayerC++.")
             ENDIF (Boost_FOUND)
-        ENDIF (CMAKE_MAJOR_VERSION EQUAL 2 AND CMAKE_MINOR_VERSION EQUAL 6)
+        ENDIF (CMAKE_MAJOR_VERSION EQUAL 2 AND CMAKE_MINOR_VERSION GREATER 5)
     ELSE (BUILD_PLAYERCC_BOOST)
         MESSAGE (STATUS
                  "Boost support disabled. Boost::Signals and Boost::Thread support will not be