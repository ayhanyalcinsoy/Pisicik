Index: server/drivers/camera/unicap/unicapImage.cc
===================================================================
--- server/drivers/camera/unicap/unicapImage.cc	(revision 8808)
+++ server/drivers/camera/unicap/unicapImage.cc	(working copy)
@@ -92,7 +92,7 @@
 
 ////////////////////////////////////////////////////////////////////////////////
 // The UniCap_Image device class.
-class UniCap_Image : public Driver
+class UniCap_Image : public ThreadedDriver
 {
   public:
     // Constructor
@@ -145,7 +145,7 @@
 // Constructor.  Retrieve options from the configuration file and do any
 // pre-Setup() setup.
 UniCap_Image::UniCap_Image (ConfigFile* cf, int section)
-    : Driver (cf, section)
+    : ThreadedDriver (cf, section)
 {
   memset (&this->cam_id, 0, sizeof (player_devaddr_t));
 
@@ -247,8 +247,6 @@
   buffer.data = (unsigned char*)(malloc (format.size.width * format.size.height * format.bpp / 8));
   buffer.buffer_size = format.size.width * format.size.height * format.bpp / 8;
   
-  // Start the device thread
-  StartThread ();
 
   return (0);
 }
@@ -257,8 +255,6 @@
 // Shutdown the device
 int UniCap_Image::Shutdown ()
 {
-  // Stop the driver thread
-  StopThread ();
 
   // Stop the device
   if ( !SUCCESS (unicap_stop_capture (handle) ) )
Index: server/drivers/camera/unicap/CMakeLists.txt
===================================================================
--- server/drivers/camera/unicap/CMakeLists.txt	(revision 8808)
+++ server/drivers/camera/unicap/CMakeLists.txt	(working copy)
@@ -7,11 +7,11 @@
     SET (unicapExtraFlags "")
     SET (unicapExtraLibs "-lunicap -lrt")
 ELSE ("${UNICAP_DIR}" STREQUAL "")
-    SET (unicapReqHeader "${UNICAP_DIR}/include/unicap/unicap.h")
+    SET (unicapReqHeader "${UNICAP_DIR}/include/unicap/unicap.h;${UNICAP_DIR}/include/unicap/unicap_status.h;${UNICAP_DIR}/include/unicap/unicap_version.h")
     SET (unicapExtraFlags "-I${UNICAP_DIR}/include/unicap")
     SET (unicapExtraLibs "-L${UNICAP_DIR}/lib -lcanlib -lrt")
 ENDIF ("${UNICAP_DIR}" STREQUAL "")
-
+SET (CMAKE_REQUIRED_FLAGS ${unicapExtraFlags})
 PLAYERDRIVER_REQUIRE_HEADER (unicapimage build_unicapimage ${unicapReqHeader})
 
 PLAYERDRIVER_ADD_DRIVER (unicapimage build_unicapimage