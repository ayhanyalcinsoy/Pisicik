diff -aur pds~/environments.py pds/environments.py
--- pds~/environments.py	2014-01-13 22:59:36.000000000 +0100
+++ pds/environments.py	2014-01-28 19:56:31.163320368 +0100
@@ -113,3 +113,10 @@
     ConfigType           = None
     DefaultIconTheme     = 'oxygen'
 
+class Mate(DefaultDe):
+    Name                 = 'mate'
+    Version              = '1.61'
+    ConfigPath           = '$HOME/.config/mate'
+    ConfigFile           = ''
+    ConfigType           = None
+    DefaultIconTheme     = 'matefaenza'
diff -aur pds~/__init__.py pds/__init__.py
--- pds~/__init__.py	2011-07-04 12:19:46.000000000 +0200
+++ pds/__init__.py	2014-01-28 22:22:56.729985428 +0100
@@ -14,8 +14,9 @@
 
 # Pardus Desktop Services
 from os import path
-from os import getenv
 from os import popen
+from os import getenv
+from os import environ
 
 import piksemel
 import gettext
@@ -32,7 +33,7 @@
 class Pds:
 
     SupportedDesktops = (DefaultDe, Kde4, Kde3, Xfce, Enlightenment, LXDE,
-                        Fluxbox, Gnome, Gnome3)
+                        Fluxbox, Gnome, Gnome3, Mate)
 
     def __init__(self, catalogName='', debug=False):
         self._session           = None
@@ -148,12 +149,19 @@
     def session(self):
         if not self._session:
             env = getenv('DESKTOP_SESSION')
-            if env == 'default' or not env or env == 'gnome':
+            if not env:
+                for var in list(environ.keys()):
+                    v = var.split('_')
+                    if len(v) < 2: continue
+                    elif v[1] == 'DESKTOP':
+                        env = v[0].lower()
+                        break
+            elif env == 'default' or env == 'gnome':
                 session = readfile('/etc/default/desktop', DefaultDe.Name)
                 env     = session.split('=')[1].strip()
             for de in Pds.SupportedDesktops:
                 if env:
-                    if env in de.SessionTypes or env == de.Name:
+                    if env in de.SessionTypes or env.lower() == de.Name.lower():
                         self._session = de
                 else:
                     if de.VersionKey:
